import re
from telegram import BotCommand
import logging
import os

from telegram import Update, InlineKeyboardButton, InlineKeyboardMarkup, InputMediaPhoto
from telegram.ext import ApplicationBuilder, ContextTypes, MessageHandler, filters, ChatMemberHandler, CommandHandler


BOT_TOKEN = os.environ["BOT_TOKEN"]

# –í–∫–ª—é—á–∞–µ–º –ª–æ–≥–≥–∏—Ä–æ–≤–∞–Ω–∏–µ
logging.basicConfig(level=logging.INFO)
logger = logging.getLogger(__name__)

# –ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∫–Ω–æ–ø–∫–∞–º–∏
def build_welcome_message(user_fullname: str):
    buttons = [
        InlineKeyboardButton("üõ£ Roadmap", url="https://telegra.ph/Roadmap-05-31-2"),
        InlineKeyboardButton("üìÑ Whitepaper", url="https://telegra.ph/Whitepaper-05-31"),
        InlineKeyboardButton("üë®‚Äçüë©‚Äçüë¶‚Äçüë¶ Our X", url="https://x.com/OG_IE_CTO"),
        InlineKeyboardButton("‚úÖ Buy IE", url="https://raydium.io/swap/?inputMint=sol&outputMint=DfYVDWY1ELNpQ4s1CK5d7EJcgCGYw27DgQo2bFzMH6fA")
    ]

    # –ì—Ä—É–ø–ø–∏—Ä–æ–≤–∫–∞ –∫–Ω–æ–ø–æ–∫ –ø–æ 2 –≤ —Ä—è–¥—É
    keyboard = [buttons[i:i+2] for i in range(0, len(buttons), 2)]
    reply_markup = InlineKeyboardMarkup(keyboard)

    caption = f"üëã {user_fullname}, Welcome to the IE Community! üåê\nYou‚Äôre early, IE is evolving from meme to ecosystem."
    video_file_id = "BAACAgIAAxkBAAMFaDo7YSsE_osC--dySL3QjJAmOZQAAj2ZAAJ0fdlJKt6TBtfs9702BA"  # –ó–∞–º–µ–Ω–∏—Ç—å –Ω–∞ —Å–≤–æ–π URL

    return caption, video_file_id, reply_markup

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –Ω–æ–≤—ã—Ö —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤
async def new_chat_members_handler(update: Update, context: ContextTypes.DEFAULT_TYPE):
    for member in update.message.new_chat_members:
        username = member.username or ""
        if "bot" in username.lower():
            logger.info(f"–ü—Ä–æ–ø—É—â–µ–Ω –±–æ—Ç: @{username}")
            continue

        user_name = member.full_name
        caption, video_file_id, reply_markup = build_welcome_message(user_name)

        await context.bot.send_video(
            chat_id=update.effective_chat.id,
            video=video_file_id,
            caption=caption,
            reply_markup=reply_markup,
        )
#–ö–æ–º–∞–Ω–¥–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å—Å—ã–ª–∫–∏ –Ω–∞ —Å–∞–π—Ç        
async def send_website_link(update: Update, context: ContextTypes.DEFAULT_TYPE):
    logger.info(f"send_website_link –≤—ã–∑–≤–∞–Ω —Å —Ç–µ–∫—Å—Ç–æ–º: {update.message.text}")
    await update.message.reply_text(
        "üåê [Link on Website](https://internet-explorercto.de/)",
        parse_mode="Markdown", disable_web_page_preview=True
    )
#–ö–æ–º–∞–Ω–¥—ã 
async def on_startup(app):
    await app.bot.set_my_commands([
        BotCommand("website", "Visit the official website"),
    ])

# –û—Å–Ω–æ–≤–Ω–æ–π –∑–∞–ø—É—Å–∫ –±–æ—Ç–∞
if __name__ == "__main__":
    app = ApplicationBuilder().token(BOT_TOKEN).build()
    app.post_init = on_startup
    app.add_handler(CommandHandler("website", send_website_link))
    app.add_handler(MessageHandler(filters.StatusUpdate.NEW_CHAT_MEMBERS, new_chat_members_handler))
    app.add_handler(MessageHandler(
    filters.TEXT & filters.Regex(r"(?i)\b(web\s?site|site)\b"),
    send_website_link
))


    app.run_polling()
